{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "marsadmin"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "adminPublicKey": {
            "type": "string"
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 2
        }
    },
    "functions": [
        {
            "namespace": "mars",
            "members": {
                "virtualMachineName": {
                    "parameters": [
                        {
                            "name": "machineName",
                            "type": "string"
                        },
                        {
                            "name": "copyIndex",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('machineName'),'-', parameters('copyIndex'))]",
                        "type": "string"
                    }
                },
                "pubcliIpAddressName": {
                    "parameters": [
                        {
                            "name": "machineName",
                            "type": "string"
                        },
                        {
                            "name": "copyIndex",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('machineName'),'-ip-', parameters('copyIndex'))]",
                        "type": "string"
                    }
                },
                "nsgName": {
                    "parameters": [
                                                {
                            "name": "machineName",
                            "type": "string"
                        },
                        {
                            "name": "copyIndex",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('machineName'),'-nsg-',parameters('copyIndex'))]",
                        "type": "string"
                    }
                },
                "nicName": {
                    "parameters": [
                                                {
                            "name": "machineName",
                            "type": "string"
                        },
                        {
                            "name": "copyIndex",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('machineName'), '-nic-', parameters('copyIndex'))]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "variables": {
        "vnetId": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', resourceGroup().name, '-vnet')]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/subnet-1')]",
        "avsetName": "[concat(resourceGroup().name,'-avset')]"
    },
    "resources": [
        {
            "apiVersion": "2019-02-01",
            "copy": {
                "name": "publicIpCopies",
                "count": "[parameters('instanceCount')]"
            },
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[mars.pubcliIpAddressName(parameters('virtualMachineName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "publicIpAddressVersion": "IPv4",
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "copy": {
                "name": "nsgCopies",
                "count": "[parameters('instanceCount')]"
            },
            "name": "[mars.nsgName(parameters('virtualMachineName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "copy": {
                "name": "nicCopies",
                "count": "[parameters('instanceCount')]"
            },
            "location": "[resourceGroup().location]",
            "name": "[mars.nicName(parameters('virtualMachineName'), copyIndex())]",
            "dependsOn": [
                "nsgCopies",
                "publicIpCopies"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[mars.pubcliIpAddressName(parameters('virtualMachineName'), copyIndex())]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "copy": {
                "name": "vmCopies",
                "count": "[parameters('instanceCount')]"
            },
            "location": "[resourceGroup().location]",
            "name": "[mars.virtualMachineName(parameters('virtualMachineName'), copyIndex())]",
            "dependsOn": [
                "nicCopies",
                "nsgCopies",
                "publicIpCopies"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "name": "r",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', mars.nicName(parameters('virtualMachineName'),copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsetName'))]"
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
        }
    ],
    "outputs": {}
}
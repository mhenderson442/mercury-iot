# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/mercuryiot.functionapp/*
    exclude:
      - README.md
      - azure-pipelines.yaml
      - azure-pipelines-functions.yaml
      - mercury-iot-web-azure-pipeline.yaml
      - mercuryiot.sln
      - src/mercuryiot.web/*
      - test/mercuryiot.test.web/*
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NuGetToolInstaller@1
  displayName: 'nuget installer'
  inputs:
    checkLatest: true
- task: UseDotNet@2
  displayName: 'use .net 3'
  inputs: 
    packageType: sdk
    version: 3.x
- task: UseDotNet@2
  displayName: 'use .net 5'
  inputs: 
    packageType: sdk
    version: '5.0.x'
    includePreviewVersions: true
- task: FuncToolsInstaller@0
  displayName: 'function installer'
  inputs:
    version: 'latest'
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: mercuryiot.functions.sln

- task: DotNetCoreCLI@2
  displayName: 'dotnet build' 
  inputs:
    command: 'build'
    projects: mercuryiot.functions.sln

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*mercuryiot.functions.csproj'

- task: ArchiveFiles@2
  displayName: 'archive files'
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: CopyFiles@2
  displayName: 'copy files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/mercuryiot.functionapp/**/?(*.zip)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'publish artifact: drop'